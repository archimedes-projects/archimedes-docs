(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(n),m=r,d=b["".concat(i,".").concat(m)]||b[m]||u[m]||o;return n?a.a.createElement(d,c(c({ref:t},s),{},{components:n})):a.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),o=(n(0),n(101)),i={title:"Utils"},c={unversionedId:"js/utils",id:"js/utils",isDocsHomePage:!1,title:"Utils",description:"Archimedes has baked in some utils that are usually needed in most projects:",source:"@site/docs/js/utils.md",slug:"/js/utils",permalink:"/docs/js/utils",editUrl:"https://github.com/archimedes-projects/archimedes-docs/edit/master/docs/js/utils.md",version:"current",sidebar:"js",previous:{title:"Arch",permalink:"/docs/js/arch"},next:{title:"Components",permalink:"/docs/js/components"}},l=[{value:"Maybe",id:"maybe",children:[]},{value:"Datetime",id:"datetime",children:[]},{value:"Observer",id:"observer",children:[]}],s={toc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Archimedes has baked in some utils that are usually needed in most projects:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Maybe"),Object(o.b)("li",{parentName:"ul"},"Datetime"),Object(o.b)("li",{parentName:"ul"},"HttpClient"),Object(o.b)("li",{parentName:"ul"},"Observer"),Object(o.b)("li",{parentName:"ul"},"Extended Error"),Object(o.b)("li",{parentName:"ul"},"Is Promise"),Object(o.b)("li",{parentName:"ul"},"Types",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Class")))),Object(o.b)("h2",{id:"maybe"},"Maybe"),Object(o.b)("p",null,"This is a monad that improves ",Object(o.b)("inlineCode",{parentName:"p"},"null")," and ",Object(o.b)("inlineCode",{parentName:"p"},"undefined")," handling. It implements the ",Object(o.b)("a",{parentName:"p",href:"https://sourcemaking.com/design_patterns/null_object"},"null object pattern"),". It's best used with deep nullable and optional object structures, in other cases you might be better off with using the ",Object(o.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator"},"nullish coalescing operator")," and ",Object(o.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining"},"optional chaining operator"),"."),Object(o.b)("p",null,"You can create a Maybe like so:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"Maybe.from(42)\n")),Object(o.b)("p",null,"When you use a Maybe in order to access a value you have to use the method ",Object(o.b)("inlineCode",{parentName:"p"},"getOrElse"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"const maybe = Maybe.from(42)\nmaybe.getOrElse(0)\n")),Object(o.b)("p",null,"This is best used with objects:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"type Type = { foo: Maybe<{ bar: string }> }\nconst maybeMap = Maybe.from<Type>({ foo: Maybe.from({ bar: 'qux' }) })\nexpect(maybeMap.flatMap(x => x.foo).map(x => x.bar)).toEqual(Maybe.from('qux'))\n")),Object(o.b)("p",null,"You can use the ",Object(o.b)("inlineCode",{parentName:"p"},"map")," method to map an existing value to another one. If the Maybe doesn't have a value then the map is not called. If you want to unwrap a Maybe inside a Maybe you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"flatMap")," method."),Object(o.b)("h2",{id:"datetime"},"Datetime"),Object(o.b)("p",null,"This utility improves Date handling. Every date you create is in UTC timezone."),Object(o.b)("h2",{id:"observer"},"Observer"))}p.isMDXComponent=!0}}]);