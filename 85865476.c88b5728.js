(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{79:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return d}));var n=a(3),r=a(7),l=(a(0),a(96)),o={title:"Utils"},s={unversionedId:"js/utils",id:"js/utils",isDocsHomePage:!1,title:"Utils",description:"Archimedes has baked in some utils that are usually needed in most projects:",source:"@site/docs/js/utils.mdx",slug:"/js/utils",permalink:"/docs/js/utils",editUrl:"https://github.com/archimedes-projects/archimedes-docs/edit/main/docs/js/utils.mdx",version:"current",sidebar:"js",previous:{title:"Arch",permalink:"/docs/js/arch"},next:{title:"Components",permalink:"/docs/js/components"}},i=[{value:"Installation",id:"installation",children:[]},{value:"Maybe",id:"maybe",children:[]},{value:"Datetime",id:"datetime",children:[]},{value:"HttpClient",id:"httpclient",children:[]},{value:"Observer",id:"observer",children:[]},{value:"Extended error",id:"extended-error",children:[]}],b=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(l.b)("div",t)}},c=b("Tabs"),p=b("TabItem"),u={toc:i};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Archimedes has baked in some utils that are usually needed in most projects:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Maybe"),Object(l.b)("li",{parentName:"ul"},"Datetime"),Object(l.b)("li",{parentName:"ul"},"HttpClient"),Object(l.b)("li",{parentName:"ul"},"Observer"),Object(l.b)("li",{parentName:"ul"},"Extended Error"),Object(l.b)("li",{parentName:"ul"},"Is Promise"),Object(l.b)("li",{parentName:"ul"},"Types",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Class")))),Object(l.b)("h2",{id:"installation"},"Installation"),Object(l.b)(c,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},Object(l.b)(p,{value:"npm",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"```bash\nnpm i @archimedes/utils -SE\n```\n"))),Object(l.b)(p,{value:"yarn",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"```bash\nyarn add @archimedes/utils -E\n```\n")))),Object(l.b)("h2",{id:"maybe"},"Maybe"),Object(l.b)("p",null,"This is a monad that improves ",Object(l.b)("inlineCode",{parentName:"p"},"null")," and ",Object(l.b)("inlineCode",{parentName:"p"},"undefined")," handling. It implements the ",Object(l.b)("a",{parentName:"p",href:"https://sourcemaking.com/design_patterns/null_object"},"null object pattern"),". It's best used with deep nullable and optional object structures, in other cases you might be better off with using the ",Object(l.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator"},"nullish coalescing operator")," and ",Object(l.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining"},"optional chaining operator"),"."),Object(l.b)("p",null,"You can create a Maybe like so:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"Maybe.from(42)\n")),Object(l.b)("p",null,"When you use a Maybe in order to access a value you have to use the method ",Object(l.b)("inlineCode",{parentName:"p"},"getOrElse"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"const maybe = Maybe.from(42)\nmaybe.getOrElse(0)\n")),Object(l.b)("p",null,"This is best used with objects:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"type Type = { foo: Maybe<{ bar: string }> }\nconst maybeMap = Maybe.from<Type>({ foo: Maybe.from({ bar: 'qux' }) })\nexpect(maybeMap.flatMap(x => x.foo).map(x => x.bar)).toEqual(Maybe.from('qux'))\n")),Object(l.b)("p",null,"You can use the ",Object(l.b)("inlineCode",{parentName:"p"},"map")," method to map an existing value to another one. If the Maybe doesn't have a value then the map is not called. If you want to unwrap a Maybe inside a Maybe you can use the ",Object(l.b)("inlineCode",{parentName:"p"},"flatMap")," method."),Object(l.b)("h2",{id:"datetime"},"Datetime"),Object(l.b)("p",null,"This utility improves Date handling. Every date you create is in UTC timezone."),Object(l.b)("h2",{id:"httpclient"},"HttpClient"),Object(l.b)("p",null,"A simple ",Object(l.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},"fetch")," wrapper that has improved TypeScript support, middlewares and overall a simpler API than fetch."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-typescript"},"const httpClient = HttpClient.create({ baseUrl: 'http://localhost:8080' })\nhttpClient.get('/users')\n")),Object(l.b)("h2",{id:"observer"},"Observer"),Object(l.b)("p",null,"This interface allows you to implement the ",Object(l.b)("a",{parentName:"p",href:"https://refactoring.guru/design-patterns/observer"},"Observer pattern"),"."),Object(l.b)("h2",{id:"extended-error"},"Extended error"),Object(l.b)("p",null,"Small utility to extend from when creating ",Object(l.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types"},"custom errors")," in order to maintain proper stack trace for where our error was thrown (only available in V8):"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts"},"export class CustomError extends ExtendedError {\n  constructor() {\n    super('This is a custom error')\n  }\n}\n")))}d.isMDXComponent=!0}}]);