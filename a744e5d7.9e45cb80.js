(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{110:function(e,n,a){"use strict";var t=a(0),i=a.n(t),r=a(105),c=a(92),o=a(63),s=a.n(o),l=37,b=39;n.a=function(e){var n=e.lazy,a=e.block,o=e.defaultValue,u=e.values,m=e.groupId,d=e.className,p=Object(r.a)(),h=p.tabGroupChoices,j=p.setTabGroupChoices,O=Object(t.useState)(o),g=O[0],N=O[1],v=t.Children.toArray(e.children);if(null!=m){var f=h[m];null!=f&&f!==g&&u.some((function(e){return e.value===f}))&&N(f)}var y=function(e){N(e),null!=m&&j(m,e)},w=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":a},d)},u.map((function(e){var n=e.value,a=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===n,className:Object(c.a)("tabs__item",s.a.tabItem,{"tabs__item--active":g===n}),key:n,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,n,a){switch(a.keyCode){case b:!function(e,n){var a=e.indexOf(n)+1;e[a]?e[a].focus():e[0].focus()}(e,n);break;case l:!function(e,n){var a=e.indexOf(n)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,n)}}(w,e.target,e)},onFocus:function(){return y(n)},onClick:function(){y(n)}},a)}))),n?Object(t.cloneElement)(v.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,n){return Object(t.cloneElement)(e,{key:n,hidden:e.props.value!==g})}))))}},111:function(e,n,a){"use strict";var t=a(0),i=a.n(t);n.a=function(e){var n=e.children,a=e.hidden,t=e.className;return i.a.createElement("div",{role:"tabpanel",hidden:a,className:t},n)}},82:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return s})),a.d(n,"metadata",(function(){return l})),a.d(n,"toc",(function(){return b})),a.d(n,"default",(function(){return m}));var t=a(3),i=a(7),r=(a(0),a(95)),c=a(110),o=a(111),s={title:"Arch"},l={unversionedId:"js/arch",id:"js/arch",isDocsHomePage:!1,title:"Arch",description:"Installation",source:"@site/docs/js/arch.mdx",slug:"/js/arch",permalink:"/docs/js/arch",editUrl:"https://github.com/archimedes-projects/archimedes-docs/edit/main/docs/js/arch.mdx",version:"current",sidebar:"js",previous:{title:"Installation",permalink:"/docs/js/installation"},next:{title:"Utils",permalink:"/docs/js/utils"}},b=[{value:"Installation",id:"installation",children:[]},{value:"Use cases",id:"use-cases",children:[{value:"Queries",id:"queries",children:[]},{value:"Commands",id:"commands",children:[]},{value:"Subscribe",id:"subscribe",children:[]},{value:"Execution Options",id:"execution-options",children:[]}]},{value:"Runner",id:"runner",children:[]},{value:"Links",id:"links",children:[]},{value:"ExecutorLink",id:"executorlink",children:[]},{value:"LoggerLink",id:"loggerlink",children:[]},{value:"NotificationLink",id:"notificationlink",children:[]},{value:"Cache",id:"cache",children:[{value:"CacheLink",id:"cachelink",children:[]},{value:"Cache eviction",id:"cache-eviction",children:[]},{value:"Cache invalidations",id:"cache-invalidations",children:[]}]},{value:"NullLink",id:"nulllink",children:[]},{value:"EmptyLink",id:"emptylink",children:[]},{value:"Custom links",id:"custom-links",children:[]}],u={toc:b};function m(e){var n=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(t.a)({},u,a,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)(c.a,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},Object(r.b)(o.a,{value:"npm",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"npm i @archimedes/arch -SE\n"))),Object(r.b)(o.a,{value:"yarn",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @archimedes/arch -E\n")))),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"If you want to use cache-link and your framework mangles the name of the classes (like Angular does) you should either disable that option or avoid using that link. For example, to disable that option in Angular when you build the application set ",Object(r.b)("inlineCode",{parentName:"p"},"NG_BUILD_MANGLE=false")," in the package.json's script."),Object(r.b)("pre",{parentName:"div"},Object(r.b)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n  "build": "NG_BUILD_MANGLE=false ng build",\n},\n\n')))),Object(r.b)("h2",{id:"use-cases"},"Use cases"),Object(r.b)("p",null,"In archimedes we differentiate between ",Object(r.b)("strong",{parentName:"p"},"queries")," and ",Object(r.b)("strong",{parentName:"p"},"commands"),"."),Object(r.b)("p",null,"In order to have a query or command you must implement the ",Object(r.b)("inlineCode",{parentName:"p"},"internalExecute")," method and extend from the base class ",Object(r.b)("inlineCode",{parentName:"p"},"Query")," or ",Object(r.b)("inlineCode",{parentName:"p"},"Command"),". This method always returns a promise."),Object(r.b)("p",null,"The responsibility of use cases is to orchestrate and call other use cases and business logic. Every action a user can perform should be represented with a use case."),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"To execute a use case you ",Object(r.b)("strong",{parentName:"p"},"must call the")," ",Object(r.b)("inlineCode",{parentName:"p"},"execute")," ",Object(r.b)("strong",{parentName:"p"},"method")," instead of the ",Object(r.b)("inlineCode",{parentName:"p"},"internalExecute"),"."))),Object(r.b)("h3",{id:"queries"},"Queries"),Object(r.b)("p",null,"A ",Object(r.b)("strong",{parentName:"p"},"query")," is a use case that gets information from the system (",Object(r.b)("strong",{parentName:"p"},"immutable"),"). Queries can have parameters and return something."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class FooQry extends Query<number> {\n  async internalExecute(): Promise<number> {\n    return 42\n  }\n}\n\nconst fooQry = new FooQry()\nconst result = await fooQry.execute()\nresult // 42\n")),Object(r.b)("p",null,"You can specify what parameters you can pass as follows:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class BarQry extends Query<number, string> {\n  async internalExecute(value: string): Promise<number> {\n    return value === '' ? 0 : 42\n  }\n}\n\nconst barQry = new BarQry()\nconst result = await barQry.execute('')\nresult // 0\n")),Object(r.b)("p",null,"In case you want to pass more than one parameter you can pass it as an object:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class BarQry extends Query<number, { a: number; b: number }> {\n  async internalExecute(value: { a: number; b: number }): Promise<number> {\n    return value === '' ? value.a : value.b\n  }\n}\n\nconst barQry = new BarQry()\nconst result = await barQry.execute({ a: 1, b: 2 })\nresult // 0\n")),Object(r.b)("h3",{id:"commands"},"Commands"),Object(r.b)("p",null,"A ",Object(r.b)("strong",{parentName:"p"},"command")," is a use case that performs an action or a side effect in the system (",Object(r.b)("strong",{parentName:"p"},"mutable"),"). Commands can have parameters and should not return anything"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Command } from '@archimedes/arch'\n\nexport class BazCmd extends Command {\n  async internalExecute() {\n    console.log('Hello world!')\n  }\n}\n\nconst bazQry = new BazCmd()\nawait bazQry.execute() // 'Hello world!\n")),Object(r.b)("h3",{id:"subscribe"},"Subscribe"),Object(r.b)("p",null,"Sometimes you might want to execute some logic whenever a Query or a Command has executed:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class FooQry extends Query<number> {\n  async internalExecute(): Promise<number> {\n    return 42\n  }\n}\n\nlet called = false\nconst fooQry = new FooQry()\nfooQry.subscribe(() => (called = true))\nawait fooQry.execute()\ncalled // true\n")),Object(r.b)("p",null,"When you subscribe a unique id is returned. This id is used to unsubscribe."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"let calls = 0\nconst fooQry = new FooQry()\nconst id = fooQry.subscribe(() => calls++)\nawait fooQry.execute()\nfooQry.unsubscribe(id)\nawait fooQry.execute()\ncalls // 1\n")),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Remember to unsubscribe when finished with a use case, if not you might have memory leaks!"))),Object(r.b)("h3",{id:"execution-options"},"Execution Options"),Object(r.b)("p",null,"When you execute a use case you can pass options as the second parameter:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"const quxQry = new QuxCmd()\nawait quxQry.execute(1, {\n  inlineError: true\n})\n")),Object(r.b)("p",null,"If query or command does not have any parameters you have to pass ",Object(r.b)("inlineCode",{parentName:"p"},"undefined"),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"const quxQry = new QuxCmd()\nawait quxQry.execute(undefined, {\n  inlineError: true\n})\n")),Object(r.b)("p",null,"You can define your own execution options typings by creating a ",Object(r.b)("inlineCode",{parentName:"p"},"index.d.ts")," in the root of your project with the following contents:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import '@archimedes/arch'\n\ndeclare module '@archimedes/arch' {\n  interface ExecutionOptions {\n    extraOption: string\n    inlineError: boolean\n  }\n}\n")),Object(r.b)("p",null,"If you do so, you can have a type safe way to pass custom options:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"const quxQry = new QuxCmd()\nawait quxQry.execute(undefined, {\n  inlineError: true,\n  extraOption: 'foo'\n})\n")),Object(r.b)("h2",{id:"runner"},"Runner"),Object(r.b)("p",null,"The runner configures a ",Object(r.b)("a",{parentName:"p",href:"https://refactoring.guru/design-patterns/chain-of-responsibility"},"chain of responsibility")," which allows a use case to be processed through links."),Object(r.b)("p",null,"This means that for each action the user performs in your app you can execute arbitrary code, like for example: logging the request, caching data, handling errors and much more in a ",Object(r.b)("strong",{parentName:"p"},"flexible")," yet ",Object(r.b)("strong",{parentName:"p"},"robust")," way."),Object(r.b)("p",null,"In order to create the chain you have to do this ",Object(r.b)("strong",{parentName:"p"},"as soon as possible")," in your app:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"Runner.createChain([new ExecutorLink(), new LoggerLink(console)])\n")),Object(r.b)("p",null,"You can configure the chain however you want, even dynamically:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"if (isProduction) {\n  Runner.createChain([new ExecutorLink()])\n} else {\n  Runner.createChain([new ExecutorLink(), new LoggerLink(console)])\n}\n")),Object(r.b)("p",null,"A complete chain looks like this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"Runner.createChain([\n  new CacheLink(new CacheManager()),\n  new ExecutorLink(),\n  new LoggerLink(console),\n  new NotificationLink(new NotificationCenter())\n])\n")),Object(r.b)("p",null,"Now, when you create a use case like follows:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class FooQry extends Query<number> {\n  async internalExecute(): Promise<number> {\n    return 42\n  }\n}\n")),Object(r.b)("p",null,"And execute it:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"const fooQry = new FooQry()\nawait fooQry.execute()\n")),Object(r.b)("p",null,"The use case will be cached, executed, a log will be shown with the result, the date and if an error happens, the notification center will be notified. And there is even more! You can create ",Object(r.b)("a",{parentName:"p",href:"#custom-links"},"custom links"),"."),Object(r.b)("h2",{id:"links"},"Links"),Object(r.b)("h2",{id:"executorlink"},"ExecutorLink"),Object(r.b)("p",null,"This link merely executes the use case. It is always needed if you want to execute the use cases."),Object(r.b)("h2",{id:"loggerlink"},"LoggerLink"),Object(r.b)("p",null,"This link logs information about the execution of the use case, like parameters, result and name of the use case:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-text"},"BazQry\n  Parameters: -\n  Result:\n      42\n")),Object(r.b)("p",null,"It receives an object that conforms the Logger interface:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"export interface Logger {\n  log<T>(message: T): void\n}\n")),Object(r.b)("p",null,"For example, the ",Object(r.b)("inlineCode",{parentName:"p"},"window.console")," conforms that interface, so you can either use that:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"// Local logger\nnew LoggerLink(console)\n")),Object(r.b)("p",null,"or any other implementation, like a custom remote logger:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"class RemoteLogger implements Logger {\n  log<T>(message: T): void {\n    fetch('remote.logger.com', { body: message })\n  }\n}\n\nnew LoggerLink(new RemoteLogger())\n")),Object(r.b)("h2",{id:"notificationlink"},"NotificationLink"),Object(r.b)("p",null,"This link is meant to capture errors occurred when executing a use case. This link should be placed after ",Object(r.b)("inlineCode",{parentName:"p"},"ExecutorLink"),". When an error occurs it will notify the ",Object(r.b)("inlineCode",{parentName:"p"},"NotificationCenter"),". From the UI you can subscribe to the ",Object(r.b)("inlineCode",{parentName:"p"},"NotificationCenter")," in order to show the user an error message:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { NotificationCenter } from './notification-center'\nimport { Observer } from './observer'\n\nclass ErrorAlerter implements Observer {\n  update(subject: NotificationCenter) {\n    subject.notifications.forEach(x => {\n      alert(x.message)\n    })\n  }\n}\n\nnew NotificationCenter().register(new ErrorAlerter())\n")),Object(r.b)("p",null,"If you want a use case not to show an error when it fails you can execute the use case with the ",Object(r.b)("inlineCode",{parentName:"p"},"inlineError")," defined in the ",Object(r.b)("a",{parentName:"p",href:"#execution-options"},"execution options")),Object(r.b)("h2",{id:"cache"},"Cache"),Object(r.b)("h3",{id:"cachelink"},"CacheLink"),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"The ",Object(r.b)("inlineCode",{parentName:"p"},"executor-link")," is always required, even if you use the ",Object(r.b)("inlineCode",{parentName:"p"},"cache-link"),"."))),Object(r.b)("h3",{id:"cache-eviction"},"Cache eviction"),Object(r.b)("p",null,"You can automatically evict the cache of dependant use cases using the ",Object(r.b)("inlineCode",{parentName:"p"},"EvictCache")," decorator in conjunction with the ",Object(r.b)("inlineCode",{parentName:"p"},"cache-link")," link. If use case ",Object(r.b)("inlineCode",{parentName:"p"},"a")," depends on use case ",Object(r.b)("inlineCode",{parentName:"p"},"b"),", and use case ",Object(r.b)("inlineCode",{parentName:"p"},"b")," depends on use case ",Object(r.b)("inlineCode",{parentName:"p"},"c")," (",Object(r.b)("inlineCode",{parentName:"p"},"a")," \u27a1 ",Object(r.b)("inlineCode",{parentName:"p"},"b")," \u27a1 ",Object(r.b)("inlineCode",{parentName:"p"},"c"),"\ufe0f) if we invalidate the cache of use case ",Object(r.b)("inlineCode",{parentName:"p"},"a")," we should evict the cache of use case ",Object(r.b)("inlineCode",{parentName:"p"},"b")," and ",Object(r.b)("inlineCode",{parentName:"p"},"c")," too. We should add this decorator to all use cases we want this handled."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"@EvictCache\nexport class AQry extends Query {\n  constructor(private readonly bQry: BQry) {\n    super()\n  }\n\n  async internalExecute() {\n    return this.bQry.execute()\n  }\n}\n")),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"It's important to activate ",Object(r.b)("inlineCode",{parentName:"p"},"emitDecoratorMetadata")," to true in the ",Object(r.b)("inlineCode",{parentName:"p"},"tsconfig.json")," compiler's options. See the ",Object(r.b)("inlineCode",{parentName:"p"},"examples")," directory for more information."))),Object(r.b)("h3",{id:"cache-invalidations"},"Cache invalidations"),Object(r.b)("p",null,"If you want to set that certain commands or queries invalidate the cache of other commands and queries you can set the cache invalidations the ",Object(r.b)("inlineCode",{parentName:"p"},"CacheInvalidations")," class:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"CacheInvalidations.set(FooCmd.name, [BarQry.name])\n")),Object(r.b)("p",null,"You can also use these invalidation policies:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"ALL: The use case will invalidate all the cache of all the use cases"),Object(r.b)("li",{parentName:"ul"},"NO_CACHE: The use case will never be cached")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"CacheInvalidations.set(FooCmd.name, [InvalidationPolicy.ALL])\n")),Object(r.b)("h2",{id:"nulllink"},"NullLink"),Object(r.b)("p",null,"This link throws an error when is called."),Object(r.b)("h2",{id:"emptylink"},"EmptyLink"),Object(r.b)("p",null,"This link does nothing when called."),Object(r.b)("h2",{id:"custom-links"},"Custom links"),Object(r.b)("p",null,"You can create your own custom links by extending the ",Object(r.b)("a",{parentName:"p",href:"https://github.com/archimedes-projects/archimedes-js/blob/0f9c51ac387e9bdb59e5cae911ef04c9b3b55acd/packages/arch/src/runner/links/base-link.ts"},"BaseLink")," class. For instance imagine if we wanted to create a link that starts a spinner when executing an use case:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"import { BaseLink } from './base-link'\nimport { Context } from './context'\nimport { Loading } from '../loading/loading'\n\nexport class LoadingLink extends BaseLink {\n  constructor(private readonly loading: Loading) {\n    super()\n  }\n\n  next(context: Context): void {\n    this.loading.start()\n    context.result = context.result?.finally(() => {\n      this.loading.end()\n    })\n    this.nextLink.next(context)\n  }\n}\n")),Object(r.b)("p",null,"And then register it in the runner:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-ts"},"Runner.createChain([new LoadingLink(new Loading()), new ExecutorLink()])\n")))}m.isMDXComponent=!0}}]);