(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{111:function(e,n,a){"use strict";var t=a(0),i=a.n(t),c=a(106),r=a(93),o=a(63),s=a.n(o),l=37,b=39;n.a=function(e){var n=e.lazy,a=e.block,o=e.defaultValue,u=e.values,d=e.groupId,m=e.className,p=Object(c.a)(),h=p.tabGroupChoices,j=p.setTabGroupChoices,O=Object(t.useState)(o),g=O[0],N=O[1],v=t.Children.toArray(e.children);if(null!=d){var y=h[d];null!=y&&y!==g&&u.some((function(e){return e.value===y}))&&N(y)}var f=function(e){N(e),null!=d&&j(d,e)},w=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":a},m)},u.map((function(e){var n=e.value,a=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===n,className:Object(r.a)("tabs__item",s.a.tabItem,{"tabs__item--active":g===n}),key:n,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,n,a){switch(a.keyCode){case b:!function(e,n){var a=e.indexOf(n)+1;e[a]?e[a].focus():e[0].focus()}(e,n);break;case l:!function(e,n){var a=e.indexOf(n)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,n)}}(w,e.target,e)},onFocus:function(){return f(n)},onClick:function(){f(n)}},a)}))),n?Object(t.cloneElement)(v.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,n){return Object(t.cloneElement)(e,{key:n,hidden:e.props.value!==g})}))))}},112:function(e,n,a){"use strict";var t=a(0),i=a.n(t);n.a=function(e){var n=e.children,a=e.hidden,t=e.className;return i.a.createElement("div",{role:"tabpanel",hidden:a,className:t},n)}},83:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return s})),a.d(n,"metadata",(function(){return l})),a.d(n,"toc",(function(){return b})),a.d(n,"default",(function(){return d}));var t=a(3),i=a(7),c=(a(0),a(96)),r=a(111),o=a(112),s={title:"Arch"},l={unversionedId:"js/arch",id:"js/arch",isDocsHomePage:!1,title:"Arch",description:"Installation",source:"@site/docs/js/arch.mdx",slug:"/js/arch",permalink:"/docs/js/arch",editUrl:"https://github.com/archimedes-projects/archimedes-docs/edit/main/docs/js/arch.mdx",version:"current",sidebar:"js",previous:{title:"Installation",permalink:"/docs/js/installation"},next:{title:"Utils",permalink:"/docs/js/utils"}},b=[{value:"Installation",id:"installation",children:[]},{value:"Use cases",id:"use-cases",children:[{value:"Queries",id:"queries",children:[]},{value:"Commands",id:"commands",children:[]},{value:"Subscribe",id:"subscribe",children:[]},{value:"Execution Options",id:"execution-options",children:[]}]},{value:"Chain of responsibility",id:"chain-of-responsibility",children:[]},{value:"Links",id:"links",children:[{value:"ExecutorLink",id:"executorlink",children:[]},{value:"LoggerLink",id:"loggerlink",children:[]},{value:"NotificationLink",id:"notificationlink",children:[]},{value:"CacheLink",id:"cachelink",children:[]},{value:"NullLink",id:"nulllink",children:[]},{value:"EmptyLink",id:"emptylink",children:[]},{value:"Custom links",id:"custom-links",children:[]}]},{value:"Cache",id:"cache",children:[{value:"UseCaseKey",id:"usecasekey",children:[]},{value:"Invalidate cache decorator",id:"invalidate-cache-decorator",children:[]},{value:"Cache invalidations",id:"cache-invalidations",children:[]},{value:"Invalidate cache in runtime",id:"invalidate-cache-in-runtime",children:[]}]}],u={toc:b};function d(e){var n=e.components,a=Object(i.a)(e,["components"]);return Object(c.b)("wrapper",Object(t.a)({},u,a,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"installation"},"Installation"),Object(c.b)(r.a,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},Object(c.b)(o.a,{value:"npm",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"npm i @archimedes/arch -SE\n"))),Object(c.b)(o.a,{value:"yarn",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @archimedes/arch -E\n")))),Object(c.b)("h2",{id:"use-cases"},"Use cases"),Object(c.b)("p",null,"In archimedes we differentiate between ",Object(c.b)("strong",{parentName:"p"},"queries")," and ",Object(c.b)("strong",{parentName:"p"},"commands"),"."),Object(c.b)("p",null,"In order to have a query or command you must implement the ",Object(c.b)("inlineCode",{parentName:"p"},"internalExecute")," method and extend from the base class ",Object(c.b)("inlineCode",{parentName:"p"},"Query")," or ",Object(c.b)("inlineCode",{parentName:"p"},"Command"),". This method always returns a promise."),Object(c.b)("p",null,"The responsibility of use cases is to orchestrate and call other use cases and business logic. Every action a user can perform should be represented with a use case."),Object(c.b)("div",{className:"admonition admonition-important alert alert--info"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"To execute a use case you ",Object(c.b)("strong",{parentName:"p"},"must call the")," ",Object(c.b)("inlineCode",{parentName:"p"},"execute")," ",Object(c.b)("strong",{parentName:"p"},"method")," instead of the ",Object(c.b)("inlineCode",{parentName:"p"},"internalExecute"),"."))),Object(c.b)("h3",{id:"queries"},"Queries"),Object(c.b)("p",null,"A ",Object(c.b)("strong",{parentName:"p"},"query")," is a use case that gets information from the system (",Object(c.b)("strong",{parentName:"p"},"immutable"),"). Queries can have parameters and return something."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class FooQry extends Query<number> {\n  async internalExecute(): Promise<number> {\n    return 42\n  }\n}\n\nconst fooQry = new FooQry()\nconst result = await fooQry.execute()\nresult // 42\n")),Object(c.b)("p",null,"You can specify what parameters you can pass as follows:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class BarQry extends Query<number, string> {\n  async internalExecute(value: string): Promise<number> {\n    return value === '' ? 0 : 42\n  }\n}\n\nconst barQry = new BarQry()\nconst result = await barQry.execute('')\nresult // 0\n")),Object(c.b)("p",null,"In case you want to pass more than one parameter you can pass it as an object:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class BarQry extends Query<number, { a: number; b: number }> {\n  async internalExecute(value: { a: number; b: number }): Promise<number> {\n    return value === '' ? value.a : value.b\n  }\n}\n\nconst barQry = new BarQry()\nconst result = await barQry.execute({ a: 1, b: 2 })\nresult // 0\n")),Object(c.b)("h3",{id:"commands"},"Commands"),Object(c.b)("p",null,"A ",Object(c.b)("strong",{parentName:"p"},"command")," is a use case that performs an action or a side effect in the system (",Object(c.b)("strong",{parentName:"p"},"mutable"),"). Commands can have parameters and should not return anything"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { Command } from '@archimedes/arch'\n\nexport class BazCmd extends Command {\n  async internalExecute() {\n    console.log('Hello world!')\n  }\n}\n\nconst bazQry = new BazCmd()\nawait bazQry.execute() // 'Hello world!\n")),Object(c.b)("h3",{id:"subscribe"},"Subscribe"),Object(c.b)("p",null,"Sometimes you might want to execute some logic whenever a Query or a Command has executed:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class FooQry extends Query<number> {\n  async internalExecute(): Promise<number> {\n    return 42\n  }\n}\n\nlet called = false\nconst fooQry = new FooQry()\nfooQry.subscribe(() => (called = true))\nawait fooQry.execute()\ncalled // true\n")),Object(c.b)("p",null,"In the subscribe callback you can receive additional information like the ",Object(c.b)("inlineCode",{parentName:"p"},"param")," used to execute the use case, the ",Object(c.b)("inlineCode",{parentName:"p"},"result")," and the ",Object(c.b)("inlineCode",{parentName:"p"},"executionOptions"),":"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class FooQry extends Query<number> {\n  async internalExecute(): Promise<number> {\n    return 42\n  }\n}\n\nlet called = false\nconst fooQry = new FooQry()\nfooQry.subscribe(({ param, result, executionOptions }) => {\n  console.log(param, result, executionOptions)\n  called = true\n})\nawait fooQry.execute()\ncalled // true\n")),Object(c.b)("p",null,"When you subscribe a unique id is returned. This id is used to unsubscribe."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"let calls = 0\nconst fooQry = new FooQry()\nconst id = fooQry.subscribe(() => calls++)\nawait fooQry.execute()\nfooQry.unsubscribe(id)\nawait fooQry.execute()\ncalls // 1\n")),Object(c.b)("div",{className:"admonition admonition-important alert alert--info"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"Remember to unsubscribe when finished with a use case, if not you might have memory leaks!"))),Object(c.b)("h3",{id:"execution-options"},"Execution Options"),Object(c.b)("p",null,"When you execute a use case you can pass options as the second parameter:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"const quxQry = new QuxCmd()\nawait quxQry.execute(1, {\n  inlineError: true\n})\n")),Object(c.b)("p",null,"If query or command does not have any parameters you have to pass ",Object(c.b)("inlineCode",{parentName:"p"},"undefined"),":"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"const quxQry = new QuxCmd()\nawait quxQry.execute(undefined, {\n  inlineError: true\n})\n")),Object(c.b)("p",null,"You can define your own execution options typings by creating a ",Object(c.b)("inlineCode",{parentName:"p"},"archimedes.d.ts")," in the root of your project with the following contents:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import '@archimedes/arch'\n\ndeclare module '@archimedes/arch' {\n  interface ExecutionOptions {\n    extraOption: string\n    inlineError: boolean\n    invalidateCache: boolean\n  }\n}\n")),Object(c.b)("p",null,"If you do so, you can have a type safe way to pass custom options:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"const quxQry = new QuxCmd()\nawait quxQry.execute(undefined, {\n  extraOption: 'foo'\n})\n")),Object(c.b)("h2",{id:"chain-of-responsibility"},"Chain of responsibility"),Object(c.b)("p",null,"Archimedes configures a ",Object(c.b)("a",{parentName:"p",href:"https://refactoring.guru/design-patterns/chain-of-responsibility"},"chain of responsibility")," which allows a use case to be processed through links."),Object(c.b)("p",null,"This means that for each action the user performs in your app you can execute arbitrary code, like for example: logging the request, caching data, handling errors and much more in a ",Object(c.b)("strong",{parentName:"p"},"flexible")," yet ",Object(c.b)("strong",{parentName:"p"},"robust")," way."),Object(c.b)("p",null,"In order to create the chain you have to do this ",Object(c.b)("strong",{parentName:"p"},"as soon as possible")," in your app:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"Archimedes.createChain([new ExecutorLink(), new LoggerLink(console)])\n")),Object(c.b)("p",null,"You can configure the chain however you want, even dynamically:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"if (isProduction) {\n  Archimedes.createChain([new ExecutorLink()])\n} else {\n  Archimedes.createChain([new ExecutorLink(), new LoggerLink(console)])\n}\n")),Object(c.b)("p",null,"A complete chain looks like this:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"Archimedes.createChain([\n  new CacheLink(new CacheManager()),\n  new ExecutorLink(),\n  new LoggerLink(console),\n  new NotificationLink(new NotificationCenter())\n])\n")),Object(c.b)("p",null,"Now, when you create a use case like follows:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { Query } from '@archimedes/arch'\n\nexport class FooQry extends Query<number> {\n  async internalExecute(): Promise<number> {\n    return 42\n  }\n}\n")),Object(c.b)("p",null,"And execute it:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"const fooQry = new FooQry()\nawait fooQry.execute()\n")),Object(c.b)("p",null,"The use case will be cached, executed, a log will be shown with the result, the date and if an error happens, the notification center will be notified. And there is even more! You can create ",Object(c.b)("a",{parentName:"p",href:"#custom-links"},"custom links"),"."),Object(c.b)("h2",{id:"links"},"Links"),Object(c.b)("h3",{id:"executorlink"},"ExecutorLink"),Object(c.b)("p",null,"This link merely executes the use case. It is always needed if you want to execute the use cases."),Object(c.b)("h3",{id:"loggerlink"},"LoggerLink"),Object(c.b)("p",null,"This link logs information about the execution of the use case, like parameters, result and name of the use case:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-text"},"BazQry\n  Parameters: -\n  Result:\n      42\n")),Object(c.b)("p",null,"It receives an object that conforms the Logger interface:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"export interface Logger {\n  log<T>(message: T): void\n}\n")),Object(c.b)("p",null,"For example, the ",Object(c.b)("inlineCode",{parentName:"p"},"window.console")," conforms that interface, so you can either use that:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"// Local logger\nnew LoggerLink(console)\n")),Object(c.b)("p",null,"or any other implementation, like a custom remote logger:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"class RemoteLogger implements Logger {\n  log<T>(message: T): void {\n    fetch('remote.logger.com', { body: message })\n  }\n}\n\nnew LoggerLink(new RemoteLogger())\n")),Object(c.b)("h3",{id:"notificationlink"},"NotificationLink"),Object(c.b)("p",null,"This link is meant to capture errors occurred when executing a use case. This link should be placed after ",Object(c.b)("inlineCode",{parentName:"p"},"ExecutorLink"),". When an error occurs it will notify the ",Object(c.b)("inlineCode",{parentName:"p"},"NotificationCenter"),". From the UI you can subscribe to the ",Object(c.b)("inlineCode",{parentName:"p"},"NotificationCenter")," in order to show the user an error message:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { NotificationCenter } from './notification-center'\nimport { Observer } from './observer'\n\nclass ErrorAlerter implements Observer {\n  update(subject: NotificationCenter) {\n    subject.notifications.forEach(x => {\n      alert(x.message)\n    })\n  }\n}\n\nnew NotificationCenter().register(new ErrorAlerter())\n")),Object(c.b)("p",null,"If you want a use case not to show an error when it fails you can execute the use case with the ",Object(c.b)("inlineCode",{parentName:"p"},"inlineError")," defined in the ",Object(c.b)("a",{parentName:"p",href:"#execution-options"},"execution options")),Object(c.b)("h3",{id:"cachelink"},"CacheLink"),Object(c.b)("p",null,"This link caches the results for all queries with all parameters combination. To learn more about cache move to ",Object(c.b)("a",{parentName:"p",href:"#cache"},"cache section"),"."),Object(c.b)("div",{className:"admonition admonition-important alert alert--info"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"The ",Object(c.b)("inlineCode",{parentName:"p"},"ExecutorLink")," is always required, even if you use the ",Object(c.b)("inlineCode",{parentName:"p"},"CacheLink"),"."))),Object(c.b)("div",{className:"admonition admonition-important alert alert--info"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"If you want to use ",Object(c.b)("inlineCode",{parentName:"p"},"CacheLink")," and your framework mangles the name of the classes (like Angular does) you should either disable that option or use the ",Object(c.b)("inlineCode",{parentName:"p"},"@UseCaseKey")," decorator in all your use cases (queries and commands)."),Object(c.b)("p",{parentName:"div"},"For example, to disable name mangling in Angular when you build the application set ",Object(c.b)("inlineCode",{parentName:"p"},"NG_BUILD_MANGLE=false")," in the package.json's script."),Object(c.b)("pre",{parentName:"div"},Object(c.b)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n  "build": "NG_BUILD_MANGLE=false ng build",\n},\n')),Object(c.b)("p",{parentName:"div"},"To learn more about cache move to ",Object(c.b)("a",{parentName:"p",href:"#cache"},"cache section"),"."))),Object(c.b)("h3",{id:"nulllink"},"NullLink"),Object(c.b)("p",null,"This link throws an error when is called."),Object(c.b)("h3",{id:"emptylink"},"EmptyLink"),Object(c.b)("p",null,"This link does nothing when called."),Object(c.b)("h3",{id:"custom-links"},"Custom links"),Object(c.b)("p",null,"You can create your own custom links by extending the ",Object(c.b)("a",{parentName:"p",href:"https://github.com/archimedes-projects/archimedes-js/blob/main/packages/arch/src/runner/links/base-link.ts"},"BaseLink")," class. For instance imagine if we wanted to create a link that starts a spinner when executing an use case:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { BaseLink } from './base-link'\nimport { Context } from './context'\nimport { Loading } from '../loading/loading'\n\nexport class LoadingLink extends BaseLink {\n  constructor(private readonly loading: Loading) {\n    super()\n  }\n\n  async next(context: Context): Promise<void> {\n    this.loading.start()\n    context.result = context.result?.finally(() => {\n      this.loading.end()\n    })\n    this.nextLink.next(context)\n  }\n}\n")),Object(c.b)("p",null,"And then register it in the chain of responsibility:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"Archimedes.createChain([new LoadingLink(new Loading()), new ExecutorLink()])\n")),Object(c.b)("h2",{id:"cache"},"Cache"),Object(c.b)("div",{className:"admonition admonition-important alert alert--info"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"It's important to activate ",Object(c.b)("inlineCode",{parentName:"p"},"emitDecoratorMetadata")," to true in the ",Object(c.b)("inlineCode",{parentName:"p"},"tsconfig.json")," compiler's options. See the ",Object(c.b)("inlineCode",{parentName:"p"},"examples")," directory for more information."))),Object(c.b)("h3",{id:"usecasekey"},"UseCaseKey"),Object(c.b)("p",null,"To manage properly the cache using ",Object(c.b)("inlineCode",{parentName:"p"},"CacheLink")," it is necessary to set a key that identifies each use case. To do this we must use the ",Object(c.b)("inlineCode",{parentName:"p"},"UseCaseKey")," decorator passing as parameter the name we want to give to our use case (we recommend using the same name of the class to simplify)."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"@UseCaseKey('GetTodosQry')\nexport class GetTodosQry extends Query<Todo[]> {}\n")),Object(c.b)("h3",{id:"invalidate-cache-decorator"},"Invalidate cache decorator"),Object(c.b)("p",null,"You can automatically invalidate the cache of dependant use cases using the ",Object(c.b)("inlineCode",{parentName:"p"},"InvalidateCache")," decorator in conjunction with the ",Object(c.b)("inlineCode",{parentName:"p"},"CacheLink")," link. If use case ",Object(c.b)("inlineCode",{parentName:"p"},"a")," depends on use case ",Object(c.b)("inlineCode",{parentName:"p"},"b"),", and use case ",Object(c.b)("inlineCode",{parentName:"p"},"b")," depends on use case ",Object(c.b)("inlineCode",{parentName:"p"},"c")," (",Object(c.b)("inlineCode",{parentName:"p"},"a")," \u27a1 ",Object(c.b)("inlineCode",{parentName:"p"},"b")," \u27a1 ",Object(c.b)("inlineCode",{parentName:"p"},"c"),"\ufe0f) if we invalidate the cache of use case ",Object(c.b)("inlineCode",{parentName:"p"},"a")," we should invalidate the cache of use case ",Object(c.b)("inlineCode",{parentName:"p"},"b")," and ",Object(c.b)("inlineCode",{parentName:"p"},"c")," too. We should add this decorator to all use cases we want this handled."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"@InvalidateCache\n@UseCaseKey('AQry')\nexport class AQry extends Query {\n  constructor(private readonly bQry: BQry) {\n    super()\n  }\n\n  async internalExecute() {\n    return this.bQry.execute()\n  }\n}\n")),Object(c.b)("h3",{id:"cache-invalidations"},"Cache invalidations"),Object(c.b)("p",null,"If you want to set that certain commands or queries invalidate the cache of other commands and queries you can set the cache invalidations with ",Object(c.b)("inlineCode",{parentName:"p"},"CacheInvalidations.set")," method. You should indicate the key of the use case that will invalidate the cache and the invalidations that this use case will perform when executed."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"CacheInvalidations.set('CreateTodoCmd', ['GetTodosQry'])\n")),Object(c.b)("p",null,"These invalidations can be a list of use case keys to invalidate when the first one is executed, for example:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"CacheInvalidations.set('CreateTodoCmd', ['GetTodosQry', 'GetTodoByIdQry'])\n")),Object(c.b)("p",null,"Or you can also use some one of these invalidation policies:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"ALL: The use case will invalidate all the cache of all the use cases"),Object(c.b)("li",{parentName:"ul"},"NO_CACHE: The use case will never be cached")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"CacheInvalidations.set(FooCmd.name, [InvalidationPolicy.ALL])\n")),Object(c.b)("h3",{id:"invalidate-cache-in-runtime"},"Invalidate cache in runtime"),Object(c.b)("p",null,"Sometimes you want to execute a Query invalidating the cache for this specific execution, for example, refresh an email list. To do that, you can use ",Object(c.b)("inlineCode",{parentName:"p"},"invalidateCache: true")," in the execution options object. "),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"await this.getTodosQry.execute(undefined, { invalidateCache: true })\n")))}d.isMDXComponent=!0}}]);